version: '3'

services:
  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: dbcadmium
      MYSQL_DATABASE: preview
      TZ: Asia/Seoul
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - app-network

  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-stack
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - ./redis-data/:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  coturn:
    image: coturn/coturn:latest
    container_name: coturn
    ports:
      - "3478:3478"
      - "5349:5349"
    volumes:
      - ./turnserver.conf:/my/coturn.conf
    command: -c /my/coturn.conf
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app/frontend
    env_file:
      - ./frontend/.env
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis-stack
      - REDIS_PORT=6379
    depends_on:
      redis-stack:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge